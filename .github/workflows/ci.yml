# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
# https://github.com/sebastianbergmann/phpunit/blob/main/.github/workflows/ci.yaml

on:
  push:
    branches:
      - v5.0.x
  pull_request:
    branches:
      - v5.0.x

name: "Continuous Integration"

env:
  PHP_EXTENSIONS: fileinfo, gd, imagick, json, mbstring
  PHP_INI_VALUES: memory_limit=-1, error_reporting=-1, display_errors=On

jobs:

  static-code-analysis:
    name: "Static Code Analysis"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php-version:
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"
#          - "8.5"

    env:
      PHAN_ALLOW_XDEBUG: 0
      PHAN_DISABLE_XDEBUG_WARN: 1

    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ast, ${{ env.PHP_EXTENSIONS }}
          ini-values: ${{ env.PHP_INI_VALUES }}
          coverage: none

      - name: "Install dependencies with composer"
        uses: ramsey/composer-install@v3

      - run: mkdir .build

      - name: "Run phan"
        run: php vendor/bin/phan --target-php-version=${{ matrix.php-version }}

      - name: "Run PHP_CodeSniffer"
        run: php vendor/bin/phpcs -v


  tests:
    name: "Unit Tests"
    needs: static-code-analysis
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        php-version:
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"
          - "8.5"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: ${{ env.PHP_INI_VALUES }}
          coverage: pcov
          tools: pecl

      - name: "Install dependencies with composer"
        uses: ramsey/composer-install@v3

      - name: "Run tests with PHPUnit"
        run: php vendor/bin/phpunit --colors=always --configuration=phpunit.xml.dist

      - name: "Send code coverage report to Codecov.io"
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: .build/coverage/clover.xml

      - name: "Send code coverage report to Codacy"
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: .build/coverage/clover.xml
